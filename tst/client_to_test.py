# Http client to test the server
from urllib.request import Request, urlopen

from utils.file_utils import FileUtil


class Test:
    def __init__(self, url: str):
        self.url = url

    def test(self):
        try:
            print(self.url)
            req = Request(self.url)
            response = urlopen(req)
            return response.read()
        except Exception as e:
            return ("Error: " + str(e)).encode('utf-8')


if __name__ == '__main__':
    # Download the website data from the internet.
    url = "http://localhost:25019/"

    popular_paths = ["Jeffrey_Dahmer",
                     "Rishi_Sunak",
                     "-",
                     "Cleopatra",
                     "House_of_the_Dragon",
                     "Christopher_Scarver",
                     "Ponniyin_Selvan:_I",
                     "Black_Adam_(film)",
                     "Kantara_(film)",
                     "YouTube",
                     "Deaths_in_2022",
                     "Marilyn_Monroe",
                     "Liz_Truss",
                     "ICC_Men's_T20_World_Cup",
                     "John_Wayne_Gacy",
                     "Robbie_Coltrane",
                     "The_Lord_of_the_Rings:_The_Rings_of_Power",
                     "XXX:_Return_of_Xander_Cage",
                     "2022_Russian_invasion_of_Ukraine",
                     "2022_ICC_Men's_T20_World_Cup",
                     "Halloween",
                     "Leslie_Jordan",
                     "Halloween_Ends",
                     "The_Watcher_(2022_TV_series)",
                     "Elon_Musk",
                     "Smile_(2022_film)",
                     "Akshata_Murty",
                     "Angela_Lansbury",
                     "Kanye_West",
                     "Empress_Elisabeth_of_Austria",
                     "Erling_Haaland",
                     "Evan_Peters",
                     "2022_FIFA_World_Cup",
                     "XNXX",
                     "Diwali",
                     "2022_Brazilian_general_election",
                     "Charles_Cullen",
                     "XXX_(film_series)",
                     "Bible",
                     "Jerry_Lee_Lewis",
                     "Elizabeth_II",
                     "Premier_League",
                     "Black_Adam",
                     "Wikipedia",
                     "Loretta_Lynn",
                     "Emma_D'Arcy",
                     "Andor_(TV_series)",
                     "Ansel_Adams",
                     "Facebook",
                     "Michael_J._Fox",
                     "Dahmer_‚Äì_Monster:_The_Jeffrey_Dahmer_Story",
                     "Google",
                     "Prime_Minister_of_the_United_Kingdom",
                     "Franz_Joseph_I_of_Austria",
                     "Cristiano_Ronaldo",
                     "Vikram_Vedha_(2022_film)",
                     "United_States",
                     "Rishab_Shetty",
                     "Luckiest_Girl_Alive_(film)",
                     "Jesse_Anderson",
                     "Charles_III",
                     "Andrew_Tate",
                     "Ted_Bundy",
                     "She-Hulk:_Attorney_at_Law",
                     "N._R._Narayana_Murthy",
                     "Suella_Braverman",
                     "Midnights",
                     "Don't_Worry_Darling",
                     "XXX_(2002_film)",
                     "Terrifier_2",
                     "Taylor_Swift",
                     "Lionel_Messi",
                     "Godfather_(2022_film)",
                     "India",
                     "Werewolf_by_Night_(TV_special)",
                     "XXXX_(beer)",
                     "Jamie_Lee_Curtis",
                     "Web_server_directory_index",
                     "Barbarian_(2022_film)",
                     "Elvis_Presley",
                     "Internet",
                     "Ponniyin_Selvan",
                     "Herschel_Walker",
                     "United_Kingdom",
                     "Hocus_Pocus_(1993_film)",
                     "Hocus_Pocus_2",
                     "Tom_Brady",
                     "Google_Translate",
                     "BrahmƒÅstra:_Part_One_‚Äì_Shiva",
                     "UFC_280",
                     "Skathi_(moon)",
                     "The_Midnight_Club",
                     "Luckiest_Girl_Alive",
                     "Ed_Gein",
                     "Penny_Mordaunt",
                     "Instagram",
                     "Dwayne_Johnson",
                     "John_Fetterman",
                     "Hellraiser_(2022_film)",
                     "Aaron_Judge",
                     "List_of_A_Certain_Magical_Index_characters",
                     "Black_Panther:_Wakanda_Forever",
                     "Ram_Setu_(film)",
                     "List_of_serial_killers_by_number_of_victims",
                     "Halloween_(franchise)",
                     "Kwasi_Kwarteng",
                     "Gmail",
                     "Bigg_Boss_(Hindi_season_16)",
                     "Russia",
                     "XXXTentacion",
                     "Terrifier",
                     "CEO",
                     "Boris_Johnson",
                     "Extreme_Rules_(2022)",
                     "Blonde_(2022_film)",
                     "Tulsi_Gabbard",
                     "Guillermo_del_Toro's_Cabinet_of_Curiosities",
                     "Islam_Makhachev",
                     "Russo-Ukrainian_War",
                     "Mila_Kunis",
                     "YouTube_Music",
                     "Susan_Wojcicki",
                     "Bobby_Cannavale",
                     "Necrophilia",
                     "Xi_Jinping",
                     "American_Horror_Story",
                     "YouTube_Premium",
                     "Chainsaw_Man",
                     "Jeremy_Hunt",
                     "Gisele_B√ºndchen",
                     "Adipurush",
                     "Olivia_Cooke",
                     "The_School_for_Good_and_Evil_(film)",
                     "World_War_II",
                     "Ukraine",
                     "Video_hosting_service",
                     "XXXX",
                     "Luiz_In√°cio_Lula_da_Silva",
                     "Coolio",
                     "The_Good_Nurse",
                     "Laal_Singh_Chaddha",
                     "UEFA_Champions_League",
                     "Game_of_Thrones",
                     "Vladimir_Putin",
                     "Matt_Smith",
                     "2022_Formula_One_World_Championship",
                     "Amsterdam_(2022_film)",
                     "World_War_I",
                     "Olivia_Wilde",
                     "Blink-182",
                     "Cat",
                     "Top_Gun:_Maverick",
                     "Ballon_d'Or",
                     "The_Empress_(TV_series)",
                     "Call_of_Duty:_Modern_Warfare_II_(2022_video_game)",
                     "Stoneman_Douglas_High_School_shooting",
                     "Hu_Jintao",
                     "List_of_prime_ministers_of_the_United_Kingdom",
                     "Dancing_with_the_Stars_(American_season_31)",
                     "Princess_Margaret,_Countess_of_Snowdon",
                     "Naomi_Watts",
                     "Julia_Roberts",
                     "Emmett_Till",
                     "John_Balcerzak",
                     "Raindrop_cake",
                     "Google_Classroom",
                     "Twitter"]
    for i in range(len(popular_paths)):
        path = popular_paths[i].replace(" ", "_")

        url = "http://localhost:25019/" + path
        # print(url)
        test = Test(url)
        res = test.test()
        FileUtil.save_str_file("websites/"+popular_paths[i], res.decode("utf-8"))
